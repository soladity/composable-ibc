name: Test

on:
  pull_request:
    branches:
      - '*'

jobs:
  tests:
    name: Composable Test
    runs-on: [ubuntu-latest]
    container:
      image: composablefi/ci-linux:2022-04-18
    steps:
    - uses: actions/checkout@v2

#    - name: Build a Composable collator
#      run: |
#        cd scripts/polkadot-launch
#        git clone -b main https://github.com/ComposableFi/composable
#        cd composable
#        cargo build --release
#        target/release/composable --version
#
#    - name: Build a Polkadot relay chain
#      run: |
#        cd scripts/polkadot-launch
#        git clone -b mmr-polkadot-v0.9.22 https://github.com/composableFi/polkadot
#        cd polkadot
#        cargo build --release
#        ./target/release/polkadot --version
#
    - name: Run polkadot-launch
      timeout-minutes: 5
      env:
        DEBIAN_FRONTEND: noninteractive
        LOG_FILE: /tmp/polka-launch/polka-launch.log
      run: |
        mkdir -p /tmp/polka-launch
        apt update -y
        apt install -y -y --no-install-recommends npm
        npm install --global yarn
        yarn
        yarn composable > "${LOG_FILE}" 2>&1 &

        # wait for polka-launch
#        while IFS="" read -r string; do
#          echo $string
#          matched_string=$(echo "$string" | grep "POLKADOT LAUNCH COMPLETE")
#          if [ -z "${matched_string}" ]; then
#            true
#          else
#            break
#          fi
#        done < <(tail -f "${LOG_FILE}")
#
        while true; do
          sleep 1
            stdout=$(tail -n 1 "${LOG_FILE}" | grep "POLKADOT LAUNCH COMPLETE")
            if [ -z "$stdout" ]; then
                true
            else
                exit 0
            fi
        done

    - name: Run Test
      env:
        NODE_ENDPOINT: "ws://composable:9944"
      run: |
        cargo test

